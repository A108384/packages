#!/bin/sh

# This script checks to see if the user has configured a pinentry configuration in their user home or system-wide first.
# If neither is defined the script checks to see if the user is using KDE or GNOME and uses an appropriate pinentry client assuming the correct
# libs are present. If the user is using something else then it will use the gtk-2 one as a fallback, and ncurses as the ultimate fallback

# user-defined pre-exec hook
test -r "${XDG_CONFIG_HOME:-$HOME/.config}"/pinentry/preexec &&
    . "${XDG_CONFIG_HOME:-$HOME/.config}"/pinentry/preexec

# site-defined pre-exec hook
test -r /etc/pinentry/preexec &&
    . /etc/pinentry/preexec

# If we're on KDE Plasma use the Qt6 pinentry
if [ "$XDG_CURRENT_DESKTOP" = "KDE" ]; then
    test -e /usr/lib64/libQt6Widgets.so.6 &&
        test -e /usr/lib64/libKF6GuiAddons.so.6 &&
            test -e /usr/lib64/libKF6WindowSystem.so.6 &&
                exec /usr/bin/pinentry-qt "$@"
fi

# If we're on GNOME use the gnome3 pinentry
if [ "$XDG_CURRENT_DESKTOP" = "GNOME" ]; then
    test -e /usr/lib64/libgcr-4.so.4 &&
        test -e /usr/lib64/libgio-2.0.so.0 &&
            exec /usr/bin/pinentry-gnome3 "$@"
fi

# If something else try to use the gtk-2 one
test -e /usr/lib64/libgdk-x11-2.0.so.0 &&
    exec /usr/bin/pinentry-gtk-2 "$@"

exec /usr/bin/pinentry-curses "$@"
