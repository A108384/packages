Index: backends/eopkg/pk-backend-eopkg.c
<+>UTF-8
===================================================================
diff --git a/backends/eopkg/pk-backend-eopkg.c b/backends/eopkg/pk-backend-eopkg.c
--- a/backends/eopkg/pk-backend-eopkg.c
+++ b/backends/eopkg/pk-backend-eopkg.c
@@ -25,10 +25,25 @@

 static PkBackendSpawn *spawn;

+void eopkg_get_backend_filename(char *);
+
+void
+eopkg_get_backend_filename(char *backend_filename)
+{
+    // char backend_filename = malloc(sizeof(char));
+    if (access("/usr/share/PackageKit/helpers/eopkg/eopkgBackend.bin", F_OK) == 0) {
+        strcpy(backend_filename, "eopkgBackend.bin");
+    } else {
+        strcpy(backend_filename, "eopkgBackend.py");
+    };
+}
+
 void
 pk_backend_repair_system (PkBackend *backend, PkBackendJob *job, PkBitfield transaction_flags)
 {
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "repair_system", NULL);
+    char backend_filename[30];
+    eopkg_get_backend_filename(backend_filename);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "repair_system", NULL);
     pk_backend_job_finished (job);
 }

@@ -122,28 +137,35 @@
 void
 pk_backend_download_packages (PkBackend *backend, PkBackendJob *job, gchar **package_ids, const gchar *directory)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;

+    eopkg_get_backend_filename(backend_filename);
     /* send the complete list as stdin */
     package_ids_temp = pk_package_ids_to_string (package_ids);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "download-packages", directory, package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "download-packages", directory, package_ids_temp, NULL);
     g_free (package_ids_temp);
 }

 void
 pk_backend_get_categories (PkBackend *backend, PkBackendJob *job)
 {
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-categories", NULL);
+    char backend_filename[30];
+    eopkg_get_backend_filename(backend_filename);
+
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-categories", NULL);
 }

 void
 pk_backend_depends_on (PkBackend *backend, PkBackendJob *job, PkBitfield filters, gchar **package_ids, gboolean recursive)
 {
+    char backend_filename[30];
     gchar *filters_text;
     gchar *package_ids_temp;
+    eopkg_get_backend_filename(backend_filename);
     package_ids_temp = pk_package_ids_to_string (package_ids);
     filters_text = pk_filter_bitfield_to_string (filters);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "depends-on", filters_text, package_ids_temp, pk_backend_bool_to_string (recursive), NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "depends-on", filters_text, package_ids_temp, pk_backend_bool_to_string (recursive), NULL);
     g_free (filters_text);
     g_free (package_ids_temp);
 }
@@ -151,18 +173,22 @@
 void
 pk_backend_get_details (PkBackend *backend, PkBackendJob *job, gchar **package_ids)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
+    eopkg_get_backend_filename(backend_filename);
     package_ids_temp = pk_package_ids_to_string (package_ids);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-details", package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-details", package_ids_temp, NULL);
     g_free (package_ids_temp);
 }

 void
 pk_backend_get_details_local (PkBackend *backend, PkBackendJob *job, gchar **files)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
+    eopkg_get_backend_filename(backend_filename);
     package_ids_temp = pk_package_ids_to_string (files);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-details-local", package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-details-local", package_ids_temp, NULL);
     g_free (package_ids_temp);
 }

@@ -175,20 +201,24 @@
 void
 pk_backend_get_files (PkBackend *backend, PkBackendJob *job, gchar **package_ids)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
+    eopkg_get_backend_filename(backend_filename);
     package_ids_temp = pk_package_ids_to_string (package_ids);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-files", package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-files", package_ids_temp, NULL);
     g_free (package_ids_temp);
 }

 void
 pk_backend_required_by (PkBackend *backend, PkBackendJob *job, PkBitfield filters, gchar **package_ids, gboolean recursive)
 {
+    char backend_filename[30];
     gchar *filters_text;
     gchar *package_ids_temp;
+    eopkg_get_backend_filename(backend_filename);
     package_ids_temp = pk_package_ids_to_string (package_ids);
     filters_text = pk_filter_bitfield_to_string (filters);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "required-by", filters_text, package_ids_temp, pk_backend_bool_to_string (recursive), NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "required-by", filters_text, package_ids_temp, pk_backend_bool_to_string (recursive), NULL);
     g_free (filters_text);
     g_free (package_ids_temp);
 }
@@ -196,26 +226,32 @@
 void
 pk_backend_get_updates (PkBackend *backend, PkBackendJob *job, PkBitfield filters)
 {
+    char backend_filename[30];
     gchar *filters_text;
+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-updates", filters_text, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-updates", filters_text, NULL);
     g_free (filters_text);
 }

 void
 pk_backend_get_update_detail (PkBackend *backend, PkBackendJob *job, gchar **package_ids)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
+    eopkg_get_backend_filename(backend_filename);
     package_ids_temp = pk_package_ids_to_string (package_ids);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-update-detail", package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-update-detail", package_ids_temp, NULL);
     g_free (package_ids_temp);
 }

 void
 pk_backend_install_packages (PkBackend *backend, PkBackendJob *job, PkBitfield transaction_flags, gchar **package_ids)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
     gchar *transaction_flags_temp;
+    eopkg_get_backend_filename(backend_filename);

     /* check network state */
     if (!pk_backend_is_online (backend)) {
@@ -228,7 +264,7 @@
     package_ids_temp = pk_package_ids_to_string (package_ids);
     transaction_flags_temp = pk_transaction_flag_bitfield_to_string (transaction_flags);

-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "install-packages", transaction_flags_temp, package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "install-packages", transaction_flags_temp, package_ids_temp, NULL);
     g_free (package_ids_temp);
     g_free (transaction_flags_temp);
 }
@@ -236,14 +272,16 @@
 void
 pk_backend_install_files (PkBackend *backend, PkBackendJob *job, PkBitfield transaction_flags, gchar **full_paths)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
     gchar *transaction_flags_temp;
+    eopkg_get_backend_filename(backend_filename);

     /* send the complete list as stdin */
     package_ids_temp = g_strjoinv (PK_BACKEND_SPAWN_FILENAME_DELIM, full_paths);
     transaction_flags_temp = pk_transaction_flag_bitfield_to_string (transaction_flags);

-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "install-files", transaction_flags_temp, package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "install-files", transaction_flags_temp, package_ids_temp, NULL);
     g_free (package_ids_temp);
     g_free (transaction_flags_temp);
 }
@@ -251,6 +289,9 @@
 void
 pk_backend_refresh_cache (PkBackend *backend, PkBackendJob *job, gboolean force)
 {
+    char backend_filename[30];
+    eopkg_get_backend_filename(backend_filename);
+
     /* check network state */
     if (!pk_backend_is_online (backend)) {
         pk_backend_job_error_code (job, PK_ERROR_ENUM_NO_NETWORK, "Cannot refresh cache whilst offline");
@@ -258,7 +299,7 @@
         return;
     }

-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "refresh-cache", pk_backend_bool_to_string (force), NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "refresh-cache", pk_backend_bool_to_string (force), NULL);
 }

 void
@@ -268,14 +309,16 @@
                 gboolean allow_deps,
                 gboolean autoremove)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
     gchar *transaction_flags_temp;

+    eopkg_get_backend_filename(backend_filename);
     /* send the complete list as stdin */
     package_ids_temp = pk_package_ids_to_string (package_ids);
     transaction_flags_temp = pk_transaction_flag_bitfield_to_string (transaction_flags);
     pk_backend_spawn_helper (spawn,
-        job, "eopkgBackend.py",
+        job, backend_filename,
         "remove-packages",
         transaction_flags_temp,
         package_ids_temp,
@@ -290,17 +333,22 @@
 void
 pk_backend_repo_enable (PkBackend *backend, PkBackendJob *job, const gchar *rid, gboolean enabled)
 {
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "repo-enable", rid, pk_backend_bool_to_string (enabled), NULL);
+    char backend_filename[30];
+    eopkg_get_backend_filename(backend_filename);
+
+    pk_backend_spawn_helper (spawn, job, backend_filename, "repo-enable", rid, pk_backend_bool_to_string (enabled), NULL);
 }

 void
 pk_backend_search_details (PkBackend *backend, PkBackendJob *job, PkBitfield filters, gchar **values)
 {
+    char backend_filename[30];
     gchar *filters_text;
     gchar *search;
+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
     search = g_strjoinv ("&", values);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "search-details", filters_text, search, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "search-details", filters_text, search, NULL);
     g_free (search);
     g_free (filters_text);
 }
@@ -308,11 +356,13 @@
 void
 pk_backend_search_files (PkBackend *backend, PkBackendJob *job, PkBitfield filters, gchar **values)
 {
+    char backend_filename[30];
     gchar *filters_text;
     gchar *search;
+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
     search = g_strjoinv ("&", values);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "search-file", filters_text, search, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "search-file", filters_text, search, NULL);
     g_free (search);
     g_free (filters_text);
 }
@@ -320,11 +370,13 @@
 void
 pk_backend_search_groups (PkBackend *backend, PkBackendJob *job, PkBitfield filters, gchar **values)
 {
+    char backend_filename[30];
     gchar *filters_text;
     gchar *search;
+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
     search = g_strjoinv ("&", values);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "search-group", filters_text, search, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "search-group", filters_text, search, NULL);
     g_free (search);
     g_free (filters_text);
 }
@@ -332,11 +384,13 @@
 void
 pk_backend_search_names (PkBackend *backend, PkBackendJob *job, PkBitfield filters, gchar **values)
 {
+    char backend_filename[30];
     gchar *filters_text;
     gchar *search;
+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
     search = g_strjoinv ("&", values);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "search-name", filters_text, search, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "search-name", filters_text, search, NULL);
     g_free (search);
     g_free (filters_text);
 }
@@ -344,9 +398,10 @@
 void
 pk_backend_update_packages (PkBackend *backend, PkBackendJob *job, PkBitfield transaction_flags, gchar **package_ids)
 {
+    char backend_filename[30];
     gchar *package_ids_temp;
     gchar *transaction_flags_temp;
-
+    eopkg_get_backend_filename(backend_filename);
     /* Disable network check for now to allow for offline updates */
     /* TODO: Can we check transaction_flags or something here for that case? */
     /*if (!pk_backend_is_online (backend)) {
@@ -359,7 +414,7 @@
     package_ids_temp = pk_package_ids_to_string (package_ids);
     transaction_flags_temp = pk_transaction_flag_bitfield_to_string (transaction_flags);

-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "update-packages", transaction_flags_temp, package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "update-packages", transaction_flags_temp, package_ids_temp, NULL);
     g_free (package_ids_temp);
     g_free (transaction_flags_temp);
 }
@@ -367,21 +422,25 @@
 void
 pk_backend_get_packages (PkBackend *backend, PkBackendJob *job, PkBitfield filters)
 {
+    char backend_filename[30];
     gchar *filters_text;

+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-packages", filters_text, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-packages", filters_text, NULL);
     g_free (filters_text);
 }

 void
 pk_backend_resolve (PkBackend *backend, PkBackendJob *job, PkBitfield filters, gchar **package_ids)
 {
+    char backend_filename[30];
     gchar *filters_text;
     gchar *package_ids_temp;
+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
     package_ids_temp = pk_package_ids_to_string (package_ids);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "resolve", filters_text, package_ids_temp, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "resolve", filters_text, package_ids_temp, NULL);
     g_free (filters_text);
     g_free (package_ids_temp);
 }
@@ -389,16 +448,21 @@
 void
 pk_backend_get_repo_list (PkBackend *backend, PkBackendJob *job, PkBitfield filters)
 {
+    char backend_filename[30];
     gchar *filters_text;
+    eopkg_get_backend_filename(backend_filename);
     filters_text = pk_filter_bitfield_to_string (filters);
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "get-repo-list", filters_text, NULL);
+    pk_backend_spawn_helper (spawn, job, backend_filename, "get-repo-list", filters_text, NULL);
     g_free (filters_text);
 }

 void
 pk_backend_repo_set_data (PkBackend *backend, PkBackendJob *job, const gchar *rid, const gchar *parameter, const gchar *value)
 {
-    pk_backend_spawn_helper (spawn, job, "eopkgBackend.py", "repo-set-data", rid, parameter, value, NULL);
+    char backend_filename[30];
+    eopkg_get_backend_filename(backend_filename);
+
+    pk_backend_spawn_helper (spawn, job, backend_filename, "repo-set-data", rid, parameter, value, NULL);
 }

 gboolean
