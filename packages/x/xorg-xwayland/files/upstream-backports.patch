From 40a7a16877720b4c214be27665dadc3b7c5b57f1 Mon Sep 17 00:00:00 2001
From: Matthieu Herrb <matthieu@herrb.eu>
Date: Sun, 19 May 2024 18:12:47 +0200
Subject: [PATCH 1/6] present: On *BSD, epoll-shim is needed to emulate
 eventfd()

Signed-off-by: Matthieu Herrb <matthieu@herrb.eu>
Part-of: <https://gitlab.freedesktop.org/xorg/xserver/-/merge_requests/1559>
(cherry picked from commit 89c3f35d9277724b9816910bc72d73fa4e208f1b)
---
 present/meson.build | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/present/meson.build b/present/meson.build
index 8bcaf51f9f..faeac30749 100644
--- a/present/meson.build
+++ b/present/meson.build
@@ -16,11 +16,18 @@ hdrs_present = [
     'presentext.h',
 ]
 
+if host_machine.system() in ['freebsd', 'openbsd']
+   epoll_dep = dependency('epoll-shim')
+else
+   epoll_dep = []
+endif
+
 libxserver_present = static_library('libxserver_present',
     srcs_present,
     include_directories: inc,
     dependencies: [
         common_dep,
+	epoll_dep,
         dependency('presentproto', version: '>= 1.2')
     ],
 )
-- 
GitLab


From c865669f6008703f2a9696504eeb7f231e800823 Mon Sep 17 00:00:00 2001
From: Rouven Czerwinski <rouven@czerwinskis.de>
Date: Tue, 14 May 2024 07:59:58 +0200
Subject: [PATCH 2/6] xwayland: remove includedir from pkgconfig
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Before this change, the xwayland pkgconfig file will always contain an
includedir directive, even though xwayland is not a linkable shared
library:

  prefix=/nix/store/3spcjqp5zcyg8arz6dnsj59fal5yk3jy-xwayland-23.2.6
  includedir=${prefix}/include

  exec_prefix=${prefix}
  xwayland=/nix/store/3spcjqp5zcyg8arz6dnsj59fal5yk3jy-xwayland-23.2.6/bin/Xwayland
  […]
  Cflags: -I${includedir}

According to a bug reporter this trips up cmake [1], which expects that
the include directory exists, which it does not since xwayland does not
install any header files.

Add the dataonly directive to pkgsconfig.generate() which will remove
the default "." subdir and ensures that includedir is not set inside the
pkgconfig file. Additionally enforce the install directory to
$libdir/pkgconfig, since it otherwise will be installed to
$datadir/pkgconfig, which precludes programs from finding the pkgconfig
because share/pkgconfig is usually not included in the search path.

The resulting pkgconfig does not contain an includedir:

  prefix=/nix/store/p7xhdzl65hfhzf36vxykzp2i9cyy7y6c-xwayland-23.2.6

  exec_prefix=${prefix}
  xwayland=/nix/store/p7xhdzl65hfhzf36vxykzp2i9cyy7y6c-xwayland-23.2.6/bin/Xwayland
  have_glamor=true
  have_eglstream=true
  have_initfd=true
  have_listenfd=true
  have_verbose=true
  have_terminate_delay=true
  have_no_touch_pointer_emulation=true
  have_force_xrandr_emulation=true
  have_geometry=true
  have_fullscreen=true
  have_host_grab=true
  have_decorate=false
  have_enable_ei_portal=true
  have_byteswappedclients=true

  Name: Xwayland
  Description: X Server for Wayland
  Version: 23.2.6

[1]: https://github.com/NixOS/nixpkgs/pull/309075#issuecomment-2108381428

Signed-off-by: Rouven Czerwinski <rouven@czerwinskis.de>
Reviewed-by: Olivier Fourdan <ofourdan@redhat.com>
Part-of: <https://gitlab.freedesktop.org/xorg/xserver/-/merge_requests/1543>
(cherry picked from commit 9df084c8d164903924f1e8ecfa05f74c985773d3)
---
 hw/xwayland/meson.build | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/hw/xwayland/meson.build b/hw/xwayland/meson.build
index 59b2d27939..337b7409a0 100644
--- a/hw/xwayland/meson.build
+++ b/hw/xwayland/meson.build
@@ -189,6 +189,8 @@ pkgconfig.generate(
     filebase: 'xwayland',
     name: 'Xwayland',
     description: 'X Server for Wayland',
+    dataonly: true,
+    install_dir: join_paths(get_option('libdir'), 'pkgconfig'),
     variables: [
         'exec_prefix=${prefix}',
         'xwayland=' + xwayland_path + '/Xwayland',
-- 
GitLab


From 7433f67121604efcbd8ac6fdbcd2d628c38120ee Mon Sep 17 00:00:00 2001
From: Fotios Valasiadis <fvalasiad@gmail.com>
Date: Thu, 23 May 2024 01:58:17 +0300
Subject: [PATCH 3/6] os: Explicitly include X11/Xmd.h for CARD32 definition to
 fix building on i686

Noticed this after trying to update to xorg-server-xwayland-24.1.0 in void linux https://github.com/void-linux/void-packages/pull/50457

Signed-off-by: Fotios Valasiadis <fvalasiad@gmail.com>
Part-of: <https://gitlab.freedesktop.org/xorg/xserver/-/merge_requests/1561>
(cherry picked from commit af6180b2c918b1993b8f4f6d6be3ec81759832cb)
---
 os/osdep.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/os/osdep.h b/os/osdep.h
index 705416de30..ecc6bccc00 100644
--- a/os/osdep.h
+++ b/os/osdep.h
@@ -60,6 +60,7 @@ SOFTWARE.
 #include <limits.h>
 #include <stddef.h>
 #include <X11/Xos.h>
+#include <X11/Xmd.h>
 
 /* If EAGAIN and EWOULDBLOCK are distinct errno values, then we check errno
  * for both EAGAIN and EWOULDBLOCK, because some supposedly POSIX
-- 
GitLab


From fc785d83685677dddcfecc86db87028cacca155e Mon Sep 17 00:00:00 2001
From: Chenx Dust <chenx_dust@outlook.com>
Date: Tue, 11 Jun 2024 21:22:44 +0800
Subject: [PATCH 4/6] xwayland: fix segment fault in
 `xwl_glamor_gbm_init_main_dev`

Function `xwl_glamor_gbm_init_main_dev` does not check whether
`xwl_screen->default_feedback.main_dev` a.k.a. `main_dev` is a
valid pointer. This result in some special situation where main
linux-dmabuf device is not accessible, such as KWin nested desktop,
raising segment fault.

This commit add a null pointer check to prevent crashing.

Signed-off-by: Chenx Dust <chenx_dust@outlook.com>
Closes: https://gitlab.freedesktop.org/xorg/xserver/-/issues/1683
Fixes: d7f1909e - xwayland/glamor/gbm: make wl_drm optional
See-also: https://bugzilla.redhat.com/2284141
Part-of: <https://gitlab.freedesktop.org/xorg/xserver/-/merge_requests/1565>
(cherry picked from commit 7605833315c05488eca30ed0a70a2a1430e89bbc)
---
 hw/xwayland/xwayland-glamor-gbm.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/hw/xwayland/xwayland-glamor-gbm.c b/hw/xwayland/xwayland-glamor-gbm.c
index b30cff9358..8307f74b1c 100644
--- a/hw/xwayland/xwayland-glamor-gbm.c
+++ b/hw/xwayland/xwayland-glamor-gbm.c
@@ -1514,6 +1514,11 @@ xwl_glamor_gbm_init_main_dev(struct xwl_screen *xwl_screen)
     }
 
     main_dev = xwl_screen->default_feedback.main_dev;
+    if (!main_dev) {
+        ErrorF("No main linux-dmabuf device advertised by compositor\n");
+        return FALSE;
+    }
+
     if (!(main_dev->available_nodes & (1 << DRM_NODE_RENDER))) {
         ErrorF("Main linux-dmabuf device has no render node\n");
         return FALSE;
-- 
GitLab


From 9b0e26fa1562cf6c509b8a7b043f4c2070cc0c50 Mon Sep 17 00:00:00 2001
From: Olivier Fourdan <ofourdan@redhat.com>
Date: Tue, 4 Jun 2024 17:02:57 +0200
Subject: [PATCH 5/6] xwayland: Do not use manual redirect windows as surface
 window
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

While walking the window tree looking for the surface window to use, we
should ignore windows using manual redirection.

If a client manually redirects a window, it has control over how the
contents of that window are presented. It's not safe to present them
directly to the Wayland compositor.

v2: break instead of continue, reword commit message (Michel)

Signed-off-by: Olivier Fourdan <ofourdan@redhat.com>
Reviewed-by: Michel Dänzer <mdaenzer@redhat.com>
Fixes: 3a0fc268 - xwayland: Add xwl_window::surface_window
Closes: https://gitlab.freedesktop.org/xorg/xserver/-/issues/1677
Closes: https://gitlab.freedesktop.org/xorg/xserver/-/issues/1679
Part-of: <https://gitlab.freedesktop.org/xorg/xserver/-/merge_requests/1564>
(cherry picked from commit 0509b13fa22f56af4539214e3da5be2348d945ce)
---
 hw/xwayland/xwayland-window.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/hw/xwayland/xwayland-window.c b/hw/xwayland/xwayland-window.c
index 05f45e16f6..84291c622e 100644
--- a/hw/xwayland/xwayland-window.c
+++ b/hw/xwayland/xwayland-window.c
@@ -1365,6 +1365,9 @@ xwl_window_update_surface_window(struct xwl_window *xwl_window)
         if (window->drawable.depth == 32)
             continue;
 
+        if (window->redirectDraw == RedirectDrawManual)
+            break;
+
         surface_window = window;
     }
 
-- 
GitLab


From 8b5f67d3bba106cabaadf21b33138db1498234e7 Mon Sep 17 00:00:00 2001
From: Olivier Fourdan <ofourdan@redhat.com>
Date: Tue, 4 Jun 2024 17:26:29 +0200
Subject: [PATCH 6/6] xwayland: Stop on first unmapped child
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

If a child window of the same size is unmapped, we should stop walking
the tree looking for the surface window to use.

Whatever lies beneath is not visible anyway.

This also fixes an issue with the Damage list becoming corrupted when
destroying a window, because the first thing that DeleteWindow() does
is to unmap the window and crush the window tree underneath it.

Signed-off-by: Olivier Fourdan <ofourdan@redhat.com>
Reviewed-by: Michel Dänzer <mdaenzer@redhat.com>
Fixes: 3a0fc268 - xwayland: Add xwl_window::surface_window
Closes: https://gitlab.freedesktop.org/xorg/xserver/-/issues/1680
Part-of: <https://gitlab.freedesktop.org/xorg/xserver/-/merge_requests/1564>
(cherry picked from commit 32e16082c5297776a56e9fade91f72e603adda89)
---
 hw/xwayland/xwayland-window.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/hw/xwayland/xwayland-window.c b/hw/xwayland/xwayland-window.c
index 84291c622e..c2bd792e4f 100644
--- a/hw/xwayland/xwayland-window.c
+++ b/hw/xwayland/xwayland-window.c
@@ -1351,6 +1351,9 @@ xwl_window_update_surface_window(struct xwl_window *xwl_window)
         if (!RegionEqual(&window->winSize, &surface_window->winSize))
             break;
 
+        if (!window->mapped)
+            break;
+
         /* The surface window must be top-level for its window pixmap */
         window_pixmap = screen->GetWindowPixmap(window);
         if (window_pixmap == surface_pixmap)
-- 
GitLab

