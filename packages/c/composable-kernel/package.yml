name       : composable-kernel
version    : 6.0.0
release    : 1
source     :
    # rocm-6.0.0
    - git|https://github.com/ROCm/composable_kernel.git : 52b0bffec00772a4c1c8751232fa034ebb9310be
homepage   : https://github.com/ROCm/composable_kernel
license    : MIT
component  : programming.library
summary    : Performance Portable Programming Model for Machine Learning Tensor Operators
description: |
    The Composable Kernel (CK) library provides a programming model for writing performance-critical kernels for machine learning workloads across multiple architectures (GPUs, CPUs, etc.). The CK library uses general purpose kernel languages, such as HIP C++.
patterns   : /*
builddeps  :
    - rocm-cmake
    - rocm-hip
debug      : no
environment: |
    unset CFLAGS CXXFLAGS LDFLAGS
    export CLANG_IGNORE_WERROR=1

    export ROCM_PATH=/usr
    export HIP_CLANG_PATH=/usr/lib64/llvm-rocm/bin
    export DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
    # Check include/ck/ck.hpp for supported architectures
    # TODO(GZGavinZhao): eventually improve this to the equivalent of %AMDGPUTARGETS%. Now just build the default supported targets
    # export AMDGPU_TARGETS="gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx1030;gfx1100;gfx1101;gfx1102"
setup      : |
    %patch -p1 -i $pkgfiles/0001-Rename-device_operations-and-utility-to-prevent-name.patch

    # They put commas in a CMake macro!
    sed -i 's|USE_BITINT_EXTENSION_INT4,|USE_BITINT_EXTENSION_INT4|g' CMakeLists.txt
    sed -i 's|USE_OPT_NAVI3X,|USE_OPT_NAVI3X|g' CMakeLists.txt

    # TODO(GZGavinZhao): enable all DTYPES, may need the split library patch
    %cmake_ninja -L \
      -DCMAKE_C_COMPILER=hipcc \
      -DCMAKE_CXX_COMPILER=hipcc \
      -DCMAKE_BUILD_TYPE=Release \
      -DROCM_SYMLINK_LIBS=OFF \
      -DCMAKE_INSTALL_LIBDIR=lib%LIBSUFFIX% \
      -DINSTALL_GTEST=OFF \
      -DBUILD_DEV=OFF \
      -DBUILD_GMOCK=OFF \
      -DINSTANCES_ONLY=ON \
      -DUSE_BITINT_EXTENSION_INT4=OFF \
      -DUSE_OPT_NAVI3X=ON \
      -DDL_KERNELS=ON \
      # -DGPU_TARGETS="$AMDGPU_TARGETS" \
      # -DDTYPES="fp64;fp32;fp16;fp8;bf16;int8" \
build      : |
    %ninja_build
install    : |
    %ninja_install
