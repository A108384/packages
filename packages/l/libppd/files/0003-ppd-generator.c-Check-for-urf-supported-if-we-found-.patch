From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: zdohnal <zdohnal@redhat.com>
Date: Tue, 13 Feb 2024 10:01:54 +0100
Subject: [PATCH 3/3] ppd-generator.c: Check for `urf-supported` if we found
 `image/urf` (#39)

Some devices has AirPrint disabled by default/admins has disabled it,
but the device reports `image/urf` in `document-format-supported`, but
provides no `urf-supported` attribute, which breaks PPD generation.

We should check for `urf-supported` once we found `image/urf`, so in
case the device is missing `urf-supported` and provides other driverless
standard, the other standard is used for PPD generation.

Fixes [Fedora issue](https://bugzilla.redhat.com/show_bug.cgi?id=2263053)
---
 ppd/ppd-generator.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/ppd/ppd-generator.c b/ppd/ppd-generator.c
index ec5be195..637e7b53 100644
--- a/ppd/ppd-generator.c
+++ b/ppd/ppd-generator.c
@@ -703,7 +703,8 @@ ppdCreatePPDFromIPP2(char         *buffer,          // I - Filename buffer
     is_pdf = 1;
   }
 #ifdef CUPS_RASTER_HAVE_APPLERASTER
-  else if (cupsArrayFind(pdl_list, "image/urf"))
+  else if (cupsArrayFind(pdl_list, "image/urf") &&
+	   (ippFindAttribute(supported, "urf-supported", IPP_TAG_KEYWORD) != NULL))
   {
     int resStore = 0; // Variable for storing the no. of resolutions in the resolution array 
     int resArray[__INT16_MAX__]; // Creating a resolution array supporting a maximum of 32767 resolutions.
