From 1427d9b3fc16f2dc12ada19e96595ee7678147e5 Mon Sep 17 00:00:00 2001
From: Thomas Staudinger <Staudi.Kaos@gmail.com>
Date: Sat, 17 Feb 2024 20:44:58 +0100
Subject: [PATCH] Use FindPython instead of deprecated FindPythonInterp

Signed-off-by: Thomas Staudinger <Staudi.Kaos@gmail.com>
---
 python/CMakeLists.txt                              |  6 +++---
 python/eyescale-cmake/FindNumPy.cmake              | 14 +++++++-------
 python/scikit-build-cmake/FindCython.cmake         |  6 +++---
 .../scikit-build-cmake/FindPythonExtensions.cmake  | 11 +++++------
 python/scikit-build-cmake/UseCython.cmake          |  2 +-
 5 files changed, 19 insertions(+), 20 deletions(-)

diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 905dc97..8fd35f5 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -1,11 +1,11 @@
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR}/scikit-build-cmake)
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR}/eyescale-cmake)
+include(FindPython)
 include(UseCython)
 include(FindPythonExtensions)
 include(FindNumPy)
 
-find_package(PythonInterp REQUIRED)
-find_package(PythonLibs REQUIRED)
+find_package(Python COMPONENTS Interpreter Development REQUIRED)
 find_package(PythonExtensions REQUIRED)
 find_package(Cython REQUIRED)
 find_package(NumPy REQUIRED)
@@ -22,5 +22,5 @@ python_extension_module(zfpy)
 set(PYLIB_BUILD_DIR "${CMAKE_CURRENT_BINARY_DIR}/lib" CACHE PATH "Directory where zfp python library will be built")
 set_target_properties(zfpy PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${PYLIB_BUILD_DIR})
 # Install to the typical python module directory
-set(python_install_lib_dir "lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/site-packages/")
+set(python_install_lib_dir "lib/python${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}/site-packages/")
 install(TARGETS zfpy LIBRARY DESTINATION ${python_install_lib_dir})
diff --git a/python/eyescale-cmake/FindNumPy.cmake b/python/eyescale-cmake/FindNumPy.cmake
index 8aba4e6..0be564c 100644
--- a/python/eyescale-cmake/FindNumPy.cmake
+++ b/python/eyescale-cmake/FindNumPy.cmake
@@ -5,29 +5,29 @@
 
 # cmake_minimum_required(VERSION 2.6)
 
-if(NOT PYTHON_EXECUTABLE)
+if(NOT Python_EXECUTABLE)
   if(NumPy_FIND_QUIETLY)
-    find_package(PythonInterp QUIET)
+    find_package(Python QUIET)
   else()
-    find_package(PythonInterp)
+    find_package(Python)
     set(__numpy_out 1)
   endif()
 endif()
 
-if (PYTHON_EXECUTABLE)
+if (Python_EXECUTABLE)
   # Find out the include path
   execute_process(
-    COMMAND "${PYTHON_EXECUTABLE}" -c
+    COMMAND "${Python_EXECUTABLE}" -c
             "from __future__ import print_function\ntry: import numpy; print(numpy.get_include(), end='')\nexcept:pass\n"
             OUTPUT_VARIABLE __numpy_path)
   # And the version
   execute_process(
-    COMMAND "${PYTHON_EXECUTABLE}" -c
+    COMMAND "${Python_EXECUTABLE}" -c
             "from __future__ import print_function\ntry: import numpy; print(numpy.__version__, end='')\nexcept:pass\n"
     OUTPUT_VARIABLE __numpy_version)
 elseif(__numpy_out)
   message(STATUS "Python executable not found.")
-endif(PYTHON_EXECUTABLE)
+endif(Python_EXECUTABLE)
 
 find_path(PYTHON_NUMPY_INCLUDE_DIR numpy/arrayobject.h
   HINTS "${__numpy_path}" "${PYTHON_INCLUDE_PATH}" NO_DEFAULT_PATH)
diff --git a/python/scikit-build-cmake/FindCython.cmake b/python/scikit-build-cmake/FindCython.cmake
index 3d58c4f..699c7c3 100644
--- a/python/scikit-build-cmake/FindCython.cmake
+++ b/python/scikit-build-cmake/FindCython.cmake
@@ -36,9 +36,9 @@
 
 # Use the Cython executable that lives next to the Python executable
 # if it is a local installation.
-find_package(PythonInterp)
-if(PYTHONINTERP_FOUND)
-  get_filename_component(_python_path ${PYTHON_EXECUTABLE} PATH)
+find_package(Python)
+if(Python_Interpreter_FOUND)
+  get_filename_component(_python_path ${Python_EXECUTABLE} PATH)
   find_program(CYTHON_EXECUTABLE
                NAMES cython cython.bat cython3
                HINTS ${_python_path}
diff --git a/python/scikit-build-cmake/FindPythonExtensions.cmake b/python/scikit-build-cmake/FindPythonExtensions.cmake
index 9a3d76a..6c287a4 100644
--- a/python/scikit-build-cmake/FindPythonExtensions.cmake
+++ b/python/scikit-build-cmake/FindPythonExtensions.cmake
@@ -243,8 +243,7 @@
 # limitations under the License.
 #=============================================================================
 
-find_package(PythonInterp REQUIRED)
-find_package(PythonLibs)
+find_package(Python REQUIRED)
 include(targetLinkLibrariesWithDynamicLookup)
 
 set(_command "
@@ -292,7 +291,7 @@ sys.stdout.write(\";\".join((
 )))
 ")
 
-execute_process(COMMAND "${PYTHON_EXECUTABLE}" -c "${_command}"
+execute_process(COMMAND "${Python_EXECUTABLE}" -c "${_command}"
                 OUTPUT_VARIABLE _list
                 RESULT_VARIABLE _result)
 
@@ -322,7 +321,7 @@ if(NOT DEFINED PYTHON_EXTENSION_MODULE_SUFFIX)
 endif()
 
 function(_set_python_extension_symbol_visibility _target)
-  if(PYTHON_VERSION_MAJOR VERSION_GREATER 2)
+  if(Python_VERSION_MAJOR VERSION_GREATER 2)
     set(_modinit_prefix "PyInit_")
   else()
     set(_modinit_prefix "init")
@@ -395,7 +394,7 @@ function(python_extension_module _target)
   endif()
 
   if(NOT _is_non_lib)
-    include_directories("${PYTHON_INCLUDE_DIRS}")
+    include_directories("${Python_INCLUDE_DIRS}")
   endif()
 
   if(_is_module_lib)
@@ -429,7 +428,7 @@ function(python_extension_module _target)
 endfunction()
 
 function(python_standalone_executable _target)
-  include_directories(${PYTHON_INCLUDE_DIRS})
+  include_directories(${Python_INCLUDE_DIRS})
   target_link_libraries(${_target} ${PYTHON_LIBRARIES})
 endfunction()
 
diff --git a/python/scikit-build-cmake/UseCython.cmake b/python/scikit-build-cmake/UseCython.cmake
index 9a59664..4b507ce 100644
--- a/python/scikit-build-cmake/UseCython.cmake
+++ b/python/scikit-build-cmake/UseCython.cmake
@@ -103,7 +103,7 @@ set(CYTHON_FLAGS "" CACHE STRING
 mark_as_advanced(CYTHON_ANNOTATE CYTHON_FLAGS)
 string(REGEX REPLACE " " ";" CYTHON_FLAGS_LIST "${CYTHON_FLAGS}")
 
-find_package(PythonLibs REQUIRED)
+find_package(Python REQUIRED)
 
 set(CYTHON_CXX_EXTENSION "cxx")
 set(CYTHON_C_EXTENSION "c")
-- 
2.43.1

