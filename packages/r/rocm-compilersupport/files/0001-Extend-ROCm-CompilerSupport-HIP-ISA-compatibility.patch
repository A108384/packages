From 3419d519fca9b03ba82dde037cc4600348a9d71d Mon Sep 17 00:00:00 2001
From: Gavin Zhao <git@gzgz.dev>
Date: Tue, 20 Feb 2024 15:04:20 -0500
Subject: [PATCH] Extend ROCm-CompilerSupport HIP ISA compatibility

Inspired by a similar patch by @cgmb to clr/hipamd.

Signed-off-by: Gavin Zhao <git@gzgz.dev>
---
 lib/comgr/src/comgr-metadata.cpp | 45 +++++++++++++++++++++++++++++++-
 1 file changed, 44 insertions(+), 1 deletion(-)

diff --git a/lib/comgr/src/comgr-metadata.cpp b/lib/comgr/src/comgr-metadata.cpp
index a3375b4..0769c87 100644
--- a/lib/comgr/src/comgr-metadata.cpp
+++ b/lib/comgr/src/comgr-metadata.cpp
@@ -923,6 +923,48 @@ static constexpr const char *CLANG_OFFLOAD_BUNDLER_MAGIC =
 static constexpr size_t OffloadBundleMagicLen =
     strLiteralLength(CLANG_OFFLOAD_BUNDLER_MAGIC);
 
+struct GfxPattern {
+  StringRef root;
+  StringRef suffixes;
+};
+
+static bool matches(const GfxPattern& p, const StringRef s) {
+  if (p.root.size() + 1 != s.size()) {
+    return false;
+  }
+  if (0 != std::memcmp(p.root.data(), s.data(), p.root.size())) {
+    return false;
+  }
+  return p.suffixes.find(s[p.root.size()]) != std::string::npos;
+}
+
+
+static bool isGfx900CompatibleProcessor(const StringRef processor) {
+  return matches(GfxPattern{"gfx90", "029c"}, processor);
+}
+
+static bool isGfx1030CompatibleProcessor(const StringRef processor) {
+  return matches(GfxPattern{"gfx103", "0123456"}, processor);
+}
+
+static bool isGfx1010CompatibleProcessor(const StringRef processor) {
+  return matches(GfxPattern{"gfx101", "0123456"}, processor);
+}
+
+static bool isProcessorsCompatible(const StringRef processor1, const StringRef processor2) {
+  if (processor1 == processor2) {
+    return true;
+  } else if (isGfx900CompatibleProcessor(processor1) && isGfx900CompatibleProcessor(processor2)) {
+    return true;
+  } else if (isGfx1030CompatibleProcessor(processor1) && isGfx1030CompatibleProcessor(processor2)) {
+    return true;
+  } else if (isGfx1010CompatibleProcessor(processor1) && isGfx1010CompatibleProcessor(processor2)) {
+    return true;
+  } else {
+    return false;
+  }
+}
+
 bool isCompatibleIsaName(StringRef IsaName, StringRef CodeObjectIsaName) {
   if (IsaName == CodeObjectIsaName) {
     return true;
@@ -938,7 +980,8 @@ bool isCompatibleIsaName(StringRef IsaName, StringRef CodeObjectIsaName) {
     return false;
   }
 
-  if (CodeObjectIdent.Processor != IsaIdent.Processor) {
+  if (CodeObjectIdent.Processor != IsaIdent.Processor
+      && !isProcessorsCompatible(CodeObjectIdent.Processor, IsaIdent.Processor)) {
     return false;
   }
 
-- 
2.43.1

