name       : rccl
version    : 2.15.5
release    : 2
source     :
    - https://github.com/ROCm/rccl/archive/refs/tags/rocm-6.0.0.tar.gz : 0496d5a5f2e48c92cd390ab318df31a53cf7ec590988c2574c9f3d99c38b0fa7
homepage   : https://github.com/ROCmSoftwarePlatform/rccl
license    : MIT
component  : programming.library
summary    : ROCm Communication Collectives Library (RCCL)
description: |
    RCCL (pronounced "Rickle") is a stand-alone library of standard collective communication routines for GPUs, implementing all-reduce, all-gather, reduce, broadcast, reduce-scatter, gather, scatter, and all-to-all. There is also initial support for direct GPU-to-GPU send and receive operations. It has been optimized to achieve high bandwidth on platforms using PCIe, xGMI as well as networking using InfiniBand Verbs or TCP/IP sockets. RCCL supports an arbitrary number of GPUs installed in a single node or multiple nodes, and can be used in either single- or multi-process (e.g., MPI) applications.
builddeps  :
    - rocm-cmake
    - rocm-hip
    - rocm-hipify
    - rocm-core-devel
environment: |
    export CXXFLAGS="${CXXFLAGS/-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=32/-fcf-protection=none}"

    export ROCM_PATH=/usr
    export CMAKE_PREFIX_PATH=/usr/lib64/llvm-rocm
    export HIP_CLANG_PATH=/usr/lib64/llvm-rocm/bin
    export DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
setup      : |
    %cmake_ninja -L \
      -DCMAKE_C_COMPILER=hipcc \
      -DCMAKE_CXX_COMPILER=hipcc \
      -DCMAKE_INSTALL_LIBDIR=lib%LIBSUFFIX% \
      -DROCM_SYMLINK_LIBS=OFF \
      -DBUILD_STATIC=OFF \
      -DBUILD_TESTS=OFF \
      -DAMDGPU_TARGETS="%AMDGPUTARGETS%"
build      : |
    %ninja_build
install    : |
    %ninja_install
