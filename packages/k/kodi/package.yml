name       : kodi
version    : '20.4'
release    : 95
source     :
    - https://github.com/xbmc/xbmc/archive/refs/tags/20.4-Nexus.tar.gz : ccb2d3e382b5ae628a89db2325f5e778f1770a2a182f6eaa25645a22ccdffb18
license    : GPL-2.0-or-later
component  : desktop.multimedia
homepage   : https://kodi.tv
summary    : Free and open source software media center
description: |
    Kodi® (formerly known as XBMC™) is an award-winning free and open source (GPL) software media center for playing videos, music, pictures, games, and more. The Solus Kodi build includes essential binary add-ons and select libretro cores.
networking : yes
optimize   : speed
builddeps  :
    - pkgconfig(RapidJSON)
    - pkgconfig(alsa)
    - pkgconfig(avahi-client)
    - pkgconfig(bluez)
    - pkgconfig(bzip2)
    - pkgconfig(dbus-1)
    - pkgconfig(expat)
    - pkgconfig(flac)
    - pkgconfig(fmt)
    - pkgconfig(fstrcmp)
    - pkgconfig(gbm)
    - pkgconfig(glm)
    - pkgconfig(glu)
    - pkgconfig(gtest)
    - pkgconfig(jsoncpp)
    - pkgconfig(lcms2)
    - pkgconfig(libass)
    - pkgconfig(libbluray)
    - pkgconfig(libcap)
    - pkgconfig(libcdio)
    - pkgconfig(libcec)
    - pkgconfig(libcurl)
    - pkgconfig(libde265)
    - pkgconfig(libdrm)
    - pkgconfig(libdvdcss)
    - pkgconfig(libheif)
    - pkgconfig(libjpeg)
    - pkgconfig(liblzma)
    - pkgconfig(libmicrohttpd)
    - pkgconfig(libmodplug)
    - pkgconfig(libnfs)
    - pkgconfig(libopenmpt)
    - pkgconfig(libpcrecpp)
    - pkgconfig(libplist-2.0)
    - pkgconfig(libpulse)
    - pkgconfig(libraw)
    - pkgconfig(libssh)
    - pkgconfig(libturbojpeg)
    - pkgconfig(libusb-1.0)
    - pkgconfig(libva)
    - pkgconfig(libxslt)
    - pkgconfig(libzip)
    - pkgconfig(lirc)
    - pkgconfig(lzo2)
    - pkgconfig(mariadb)
    - pkgconfig(nlohmann_json)
    - pkgconfig(ogg)
    - pkgconfig(python3)
    - pkgconfig(smbclient)
    - pkgconfig(spdlog)
    - pkgconfig(sqlite3)
    - pkgconfig(taglib)
    - pkgconfig(tinyxml)
    - pkgconfig(tinyxml2)
    - pkgconfig(vdpau)
    - pkgconfig(vorbis)
    - pkgconfig(wavpack)
    - pkgconfig(xrandr)
    - pkgconfig(zlib)
    - flatbuffers-devel
    - giflib-devel
    - git
    - gperf
    - lame-devel
    - libiconv-devel
    - libunistring-devel
    - openjdk-17-devel
    - shairplay-devel
    - sndio-devel
    - swig
rundeps    :
    - libmodplug
    - libva-intel-driver
    - shairplay
environment: |
    PATH="$PATH:/usr/lib64/openjdk-17/bin/"

    if [[ " ${PATH[*]} " =~ "ccache" ]]; then
        export CMAKE_C_COMPILER_LAUNCHER=ccache
        export CMAKE_CXX_COMPILER_LAUNCHER=ccache
    fi

    # Just let Kodi do whatever the fuck it wants
    unset LDFLAGS
    unset CFLAGS
    unset CXXFLAGS
setup      : |
    # include kodi retroplayer addons
    # cp -f $pkgfiles/binary-addons.txt %workdir%/cmake/addons/bootstrap/repositories/

    # WARN: Do NOT enable binutils-gold, even if kodi says it prefers it
    #   --  binutils-gold makes the main kodi build fail.
    #

    # Fix up mariadb mysql.h include path
    %patch -p1 -i $pkgfiles/mariadb-fix.patch

    %patch -p1 -i $pkgfiles/flatbuffers.patch
    %patch -p1 -i $pkgfiles/binutils-2.41.patch

    mkdir kodi-build && cd kodi-build
    %cmake .. \
      -DAPP_RENDER_SYSTEM=gl \
      -DBUILD_SHARED_LIBS=ON \
      -DCORE_PLATFORM_NAME=x11 \
      -DENABLE_AIRTUNES=ON \
      -DENABLE_AVAHI=ON \
      -DENABLE_BLUETOOTH=ON \
      -DENABLE_CEC=ON \
      -DENABLE_EVENTCLIENTS=ON \
      -DENABLE_INTERNAL_CROSSGUID=ON \
      -DENABLE_INTERNAL_FFMPEG=ON \
      -DENABLE_INTERNAL_FLATBUFFERS=OFF \
      -DENABLE_INTERNAL_FMT=OFF \
      -DENABLE_INTERNAL_FSTRCMP=OFF \
      -DENABLE_INTERNAL_SPDLOG=OFF \
      -DENABLE_INTERNAL_UDFREAD=OFF \
      -DENABLE_LDGOLD=OFF \
      -DENABLE_MARIADBCLIENT=ON \
      -DENABLE_MYSQLCLIENT=OFF \
      -DENABLE_OPTICAL=ON \
      -DENABLE_SMBCLIENT=ON \
      -DENABLE_UPNP=ON \
      -DLIRC_DEVICE=/run/lirc/lircd \
      -DMARIADBCLIENT_INCLUDE_DIR=/usr/include/mysql \
      -DUSE_SHARED_LIB=ON

    # INFO: To display available configuration variables and
    #       their detected values, uncomment the following:
    #
    #cmake .. -L | awk '{if(f)print} /-- Cache values/{f=0}'
    #exit 1  # stop the build here to inspect config options
    #
build      : |
    # main kodi build
    #
    %make -C kodi-build

    # INFO: noiser build for troubleshooting purposes
    #%make VERBOSE=1 -j1 -C kodi-build
    #
install    : |
    # install kodi proper
    #
    %make_install -C kodi-build

    # INFO: The binary addons need to reference installed Kodi software
    #       artifacts.
    #       Since we're building a "batteries included" version
    #       of Kodi in one go, we need to violate the configure/build/install
    #       order here and only configure *after* kodi has been installed to
    #       the CMAKE_INSTALL_PREFIX.
    #
    #       Note that the default binary add-on make target includes all sorts
    #       of fancy dependency fetching/building with vendored libs
    #       plus an install target.
    #
    # INFO: https://github.com/xbmc/xbmc/blob/master/docs/README.Linux.md#51-in-tree-building-of-binary-add-ons
    %make -C tools/depends/target/binary-addons PREFIX="$installdir/usr" |& tee binary-addons.log
    # Fail the build if anything had a build error
    # TODO Fix the existing errors first
    # cat binary-addons.log | grep -zqv "Error 2"
check      : |
    # INFO: Tests last forever. You can run them locally but please make sure
    #       the commands are commented out before publishing
    #
    #%make check -C kodi-build
