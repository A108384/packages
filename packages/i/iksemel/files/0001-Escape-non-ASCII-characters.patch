From f27050677e11fa387d084932bc3ee57957708262 Mon Sep 17 00:00:00 2001
From: Silke Hofstra <silke@slxh.eu>
Date: Tue, 2 Apr 2024 22:13:31 +0200
Subject: [PATCH 1/2] Escape non-ASCII characters

Escape characters that are not contained in ASCII by encoding them to their HTML/Hex representation.
---
 src/iks.c           | 28 ++++++++++++++++++++++++++++
 test/meson.build    |  5 +++++
 test/tst-iks-utf8.c | 38 ++++++++++++++++++++++++++++++++++++++
 3 files changed, 71 insertions(+)
 create mode 100644 test/tst-iks-utf8.c

diff --git a/src/iks.c b/src/iks.c
index d1a1a93..ceef571 100644
--- a/src/iks.c
+++ b/src/iks.c
@@ -4,6 +4,7 @@
 ** modify it under the terms of GNU Lesser General Public License.
 */
 
+#include <uchar.h>
 #include "common.h"
 #include "iksemel.h"
 
@@ -569,10 +570,21 @@ escape_size (char *src, size_t len)
 	size_t sz;
 	char c;
 	int i;
+	char32_t mb;
+	mbstate_t state = {0};
 
 	sz = 0;
 	for (i = 0; i < len; i++) {
 		c = src[i];
+
+		int rc = (int)mbrtoc32(&mb, src+i, len - i, &state);
+		if (rc != 1) {
+			if (rc > 1) {
+				sz += (2*rc) + 4;
+			}
+			continue;
+		}
+
 		switch (c) {
 			case '&': sz += 5; break;
 			case '\'': sz += 6; break;
@@ -599,9 +611,25 @@ escape (char *dest, char *src, size_t len)
 	char c;
 	int i;
 	int j = 0;
+	char32_t mb;
+	char buf[13] = {0};
+	mbstate_t state = {0};
 
 	for (i = 0; i < len; i++) {
 		c = src[i];
+
+		int rc = (int)mbrtoc32(&mb, src+i, len - i, &state);
+		if (rc != 1) {
+			if (i - j > 0) dest = my_strcat(dest, src + j, i - j);
+			j = i + 1;
+
+			if (rc > 1) {
+				dest = my_strcat(dest, buf, snprintf(buf, sizeof buf, "&#x%x;", mb));
+			}
+
+			continue;
+		}
+
 		if ('&' == c || '<' == c || '>' == c || '\'' == c || '"' == c) {
 			if (i - j > 0) dest = my_strcat (dest, src + j, i - j);
 			j = i + 1;
diff --git a/test/meson.build b/test/meson.build
index e993364..b92082c 100644
--- a/test/meson.build
+++ b/test/meson.build
@@ -6,6 +6,10 @@ iks_test = executable('test-iks', 'tst-iks.c',
                     include_directories : include_dir,
                     link_with : libiksemel)
 
+iks_test_utf8 = executable('test-iks-utf8', 'tst-iks-utf8.c',
+                           include_directories : include_dir,
+                           link_with : libiksemel)
+
 ikstack_test = executable('test-ikstack', 'tst-ikstack.c',
                     include_directories : include_dir,
                     link_with : libiksemel)
@@ -24,6 +28,7 @@ sha_test = executable('test-sha', 'tst-sha.c',
 
 test('Iksemel Test Suite - DOM Test', dom_test, is_parallel : true)
 test('Iksemel Test Suite - IKS Test', iks_test, is_parallel : true)
+test('Iksemel Test Suite - IKS UTF-8 Test', iks_test_utf8, is_parallel : true)
 test('Iksemel Test Suite - IkStack Test', ikstack_test, is_parallel : true)
 test('Iksemel Test Suite - MD5 Test', md5_test, is_parallel : true)
 test('Iksemel Test Suite - SAX Test', sax_test, is_parallel : true)
diff --git a/test/tst-iks-utf8.c b/test/tst-iks-utf8.c
new file mode 100644
index 0000000..1443e6f
--- /dev/null
+++ b/test/tst-iks-utf8.c
@@ -0,0 +1,38 @@
+/* iksemel (XML parser for Jabber)
+** Copyright (C) 2000-2003 Gurer Ozen
+** This code is free software; you can redistribute it and/or
+** modify it under the terms of GNU Lesser General Public License.
+*/
+
+#include <stdio.h>
+#include <string.h>
+#include <locale.h>
+
+#include "iksemel.h"
+
+int main (int argc, char *argv[])
+{
+	setlocale (LC_ALL, "");
+	static char xml[] = "<test>"
+						"<text>Hello, &#x4e16;&#x754c;</text>"
+						"<emoji>&#x1f4a9;</emoji>"
+						"<invalid></invalid>"
+						"<null></null>"
+						"</test>";
+
+	iks *x = iks_new ("test");
+	iks_insert_cdata (iks_insert (x, "text"), "Hello, 世界", 13);
+	iks_insert_cdata (iks_insert (x, "emoji"), "\U0001F4A9", 4);
+	iks_insert_cdata (iks_insert (x, "invalid"), "\x80\x81", 2);
+	iks_insert_cdata (iks_insert (x, "null"), "\0", 1);
+
+	char *t = iks_string (iks_stack (x), x);
+	if(!t || strcmp(t, xml) != 0) {
+		printf("Result:   %s\n", t);
+		printf("Expected: %s\n", xml);
+		return 1;
+	}
+	iks_delete(x);
+
+	return 0;
+}
-- 
2.44.0

