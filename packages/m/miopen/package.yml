name       : miopen
version    : 3.00.0
release    : 5
source     :
    # tag: rocm-6.0.0
    # - git|https://github.com/ROCm/MIOpen.git : f34a90f7699e4af0e021ff0bf4111b1c407bdec1
    - https://github.com/ROCm/MIOpen/archive/refs/tags/rocm-6.0.0.tar.gz : a0718a48353be30ff98118ade511f0c1b454e394d8f934aefe7dd6946562b2e9
    - https://github.com/ROCm/MIOpen/raw/f34a90f7699e4af0e021ff0bf4111b1c407bdec1/src/kernels/gfx90a.kdb.bz2 : d22333c785c9081f293e56bc3f5baccc5410d578d2be1dc5e5d523d02de8b5ed
    - https://github.com/ROCm/MIOpen/raw/f34a90f7699e4af0e021ff0bf4111b1c407bdec1/src/kernels/gfx900.kdb.bz2 : 945141e464054e3527c77243c7cd7ac87fbde8e191b7d5ef0737cb1451ed52b1
    - https://github.com/ROCm/MIOpen/raw/f34a90f7699e4af0e021ff0bf4111b1c407bdec1/src/kernels/gfx906.kdb.bz2 : 727d4e0cb714422fbf40952559b10bba43148f8f9bd6f8e3461853b1e2fdb5d3
    - https://github.com/ROCm/MIOpen/raw/f34a90f7699e4af0e021ff0bf4111b1c407bdec1/src/kernels/gfx908.kdb.bz2 : 7f5b1925fbd2f58ab7011913867fcd59222e3cc09dee040f08acb6e7e22e0fda
    - https://github.com/ROCm/MIOpen/raw/f34a90f7699e4af0e021ff0bf4111b1c407bdec1/src/kernels/gfx1030.kdb.bz2 : 2c4484c69eec165ee8b0233b1dd54ca73384d1d53bf79ddedb2ce078748681f2
homepage   : https://github.com/ROCmSoftwarePlatform/MIOpen
license    : MIT
component  : programming.library
summary    : AMD's Machine Intelligence Library
description: |
    MIOpen is AMD's library for high performance machine learning primitives.
# clang      : yes
networking : yes
builddeps  :
    - pkgconfig(bzip2)
    - pkgconfig(eigen3)
    - pkgconfig(nlohmann_json)
    - pkgconfig(sqlite3)
    - pkgconfig(libzstd)
    # 你大爷的 this thing never checks out the files
    # - git-lfs
    - half
    - frugally-deep
    - libboost-devel
    - composable-kernel
    - rocblas-devel
    - rocm-cmake
    - rocm-hip
    - rocmlir
    - roctracer-devel
    # Deprecated by upstream
    # - miopengemm-devel
debug      : no
environment: |
    unset CFLAGS CXXFLAGS LDFLAGS
    # Too noisy
    export CFLAGS="-w"
    export CXXFLAGS="-w"

    export ROCM_PATH=/usr
    export HIP_CLANG_PATH=/usr/lib64/llvm-rocm/bin
    export DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
    export HIP_DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
    export CMAKE_PREFIX_PATH=/usr/lib64/llvm-rocm
    export CMAKE_MODULE_PATH=/usr/lib64/llvm-rocm/lib64/cmake/llvm

    export HIP_CLANG_LAUNCHER=sccache
    export SCCACHE_IDLE_TIMEOUT=0
    export CMAKE_C_COMPILER_LAUNCHER=sccache
    export CMAKE_CXX_COMPILER_LAUNCHER=sccache
setup      : |
    # Git LFS JUST DOESN'T WORK!!!!
    # git lfs fetch origin rocm-6.0.0 --all
    # git-lfs checkout
    # for arch in gfx90a gfx900 gfx906 gfx908 gfx1030; do
    #     curl -o src/kernels/$arch.kdb.bz2 -L https://github.com/ROCm/MIOpen/raw/f34a90f7699e4af0e021ff0bf4111b1c407bdec1/src/kernels/$arch.kdb.bz2
    # done
    cp $sources/*.kdb.bz2 src/kernels/

    sed -i "s|enable_testing()||" CMakeLists.txt
    sed -i "s|add_subdirectory(doc)||" CMakeLists.txt
    sed -i "s|add_subdirectory(test)||" CMakeLists.txt
    sed -i "s|add_subdirectory(speedtests)||" CMakeLists.txt
    sed -i 's|/opt/rocm/llvm|/usr/lib64/llvm-rocm|g' CMakeLists.txt
    sed -i 's|/opt/rocm|/usr|g' CMakeLists.txt
    sed -i 's|/usr/local/opt/llvm|/usr/lib64/llvm-rocm|' cmake/ClangTidy.cmake

    %patch -p1 -i $pkgfiles/remove-clang-tidy-checks.diff
    %patch -p1 -i $pkgfiles/0001-Extend-MIOpen-ISA-compatibility.patch

    %cmake_ninja -L \
      -DCMAKE_BUILD_TYPE="Release" \
      -DCMAKE_C_COMPILER=$HIP_CLANG_PATH/clang \
      -DCMAKE_CXX_COMPILER=$HIP_CLANG_PATH/clang++ \
      -DCMAKE_INSTALL_LIBDIR=lib%LIBSUFFIX% \
      -DROCM_SYMLINK_LIBS=OFF \
      -DBoost_USE_STATIC_LIBS=OFF \
      -DMIOPEN_TEST_ALL=OFF \
      -DMIOPEN_USE_COMGR=ON \
      -DMIOPEN_BACKEND=HIP \
      -DMIOPEN_AMDGCN_ASSEMBLER_PATH=$HIP_CLANG_PATH \
      -DMIOPEN_USE_COMPOSABLEKERNEL=ON \
      -DMIOPEN_USE_MIOPENGEMM=OFF \
      -DMIOPEN_USE_MLIR=ON \
      -DMIOPEN_USE_MIOPENTENSILE=OFF \
      -DMIOPEN_USE_ROCBLAS=ON \
      -DGPU_TARGETS="%AMDGPUTARGETS%" \
      -DAMDGPU_TARGETS="%AMDGPUTARGETS%"
build      : |
    %ninja_build
install    : |
    %ninja_install
