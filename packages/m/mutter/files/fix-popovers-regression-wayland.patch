From 827c4fea4b3a21f9d0de082031897f2bcc4300d7 Mon Sep 17 00:00:00 2001
From: Carlos Garnacho <carlosg@gnome.org>
Date: Sat, 11 May 2024 11:59:13 +0200
Subject: [PATCH 1/2] clutter: Add API to create inactive ClutterGrabs, and
 activate them explicitly

This gives greater control to the callers on the place where a grab is being
activated, this may make a difference in the handling of crossing events
triggered through it, e.g. by having callers rely on having already obtained
a ClutterGrab prior to handling the resulting effects.

The "input only" grab has also been turned inactive by default, in order to
to have the ClutterGrab pointer available for checks at the MetaWaylandEventHandler
focus changing methods triggered through grab activation.

(cherry-picked from commit 8e5f3a1f8388a2b72328bfaef91cb14755a3609f)

Part-of: <https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/3874>
---
 clutter/clutter/clutter-stage-private.h |  7 ++++
 clutter/clutter/clutter-stage.c         | 49 ++++++++++++++++++-------
 src/tests/clutter/conform/grab.c        |  1 +
 src/wayland/meta-wayland-input.c        |  2 +
 4 files changed, 45 insertions(+), 14 deletions(-)

diff --git a/clutter/clutter/clutter-stage-private.h b/clutter/clutter/clutter-stage-private.h
index da38000bd3a..6ff67f5de79 100644
--- a/clutter/clutter/clutter-stage-private.h
+++ b/clutter/clutter/clutter-stage-private.h
@@ -151,4 +151,11 @@ ClutterActor * clutter_stage_update_device_for_event (ClutterStage *stage,
 void clutter_stage_update_devices_in_view (ClutterStage     *stage,
                                            ClutterStageView *view);
 
+CLUTTER_EXPORT
+ClutterGrab * clutter_stage_grab_inactive (ClutterStage *stage,
+                                           ClutterActor *actor);
+
+CLUTTER_EXPORT
+void clutter_grab_activate (ClutterGrab *grab);
+
 G_END_DECLS
diff --git a/clutter/clutter/clutter-stage.c b/clutter/clutter/clutter-stage.c
index 719d76b4a2f..294574865b4 100644
--- a/clutter/clutter/clutter-stage.c
+++ b/clutter/clutter/clutter-stage.c
@@ -3830,18 +3830,31 @@ clutter_stage_grab_full (ClutterStage *stage,
                          ClutterActor *actor,
                          gboolean      owns_actor)
 {
-  ClutterStagePrivate *priv;
-  ClutterGrab *grab;
-  gboolean was_grabbed;
-
   g_return_val_if_fail (CLUTTER_IS_STAGE (stage), NULL);
   g_return_val_if_fail (CLUTTER_IS_ACTOR (actor), NULL);
   g_return_val_if_fail (stage ==
                         (ClutterStage *) _clutter_actor_get_stage_internal (actor),
                         NULL);
 
+  return clutter_grab_new (stage, actor, owns_actor);
+}
+
+void
+clutter_grab_activate (ClutterGrab *grab)
+{
+  ClutterStage *stage;
+  ClutterStagePrivate *priv;
+  gboolean was_grabbed;
+
+  g_return_if_fail (CLUTTER_IS_GRAB (grab));
+
+  stage = grab->stage;
   priv = clutter_stage_get_instance_private (stage);
 
+  /* This grab is already active */
+  if (grab->prev || grab->next || priv->topmost_grab == grab)
+    return;
+
   if (!priv->topmost_grab)
     {
       ClutterContext *context;
@@ -3854,8 +3867,6 @@ clutter_stage_grab_full (ClutterStage *stage,
         clutter_seat_grab (seat, clutter_get_current_event_time ());
     }
 
-  grab = clutter_grab_new (stage, actor, owns_actor);
-
   grab->prev = NULL;
   grab->next = priv->topmost_grab;
 
@@ -3876,10 +3887,10 @@ clutter_stage_grab_full (ClutterStage *stage,
 
       CLUTTER_NOTE (GRABS,
                     "[grab=%p] Attached seat grab (n_grabs: %u) on actor: %s",
-                    grab, n_grabs, _clutter_actor_get_debug_name (actor));
+                    grab, n_grabs, _clutter_actor_get_debug_name (grab->actor));
     }
 
-  clutter_actor_attach_grab (actor, grab);
+  clutter_actor_attach_grab (grab->actor, grab);
   clutter_stage_notify_grab (stage, grab, grab->next);
 
   if (was_grabbed != !!priv->topmost_grab)
@@ -3887,8 +3898,6 @@ clutter_stage_grab_full (ClutterStage *stage,
 
   if (grab->next)
     clutter_grab_notify (grab->next);
-
-  return grab;
 }
 
 /**
@@ -3905,15 +3914,27 @@ clutter_stage_grab_full (ClutterStage *stage,
 ClutterGrab *
 clutter_stage_grab (ClutterStage *stage,
                     ClutterActor *actor)
+{
+  ClutterGrab *grab;
+
+  grab = clutter_stage_grab_full (stage, actor, FALSE);
+  clutter_grab_activate (grab);
+
+  return grab;
+}
+
+ClutterGrab *
+clutter_stage_grab_inactive (ClutterStage *stage,
+                             ClutterActor *actor)
 {
   return clutter_stage_grab_full (stage, actor, FALSE);
 }
 
 ClutterGrab *
-clutter_stage_grab_input_only (ClutterStage        *stage,
-                               ClutterEventHandler  handler,
-                               gpointer             user_data,
-                               GDestroyNotify       user_data_destroy)
+clutter_stage_grab_input_only (ClutterStage         *stage,
+                               ClutterEventHandler   handler,
+                               gpointer              user_data,
+                               GDestroyNotify        user_data_destroy)
 {
   ClutterInputOnlyActor *input_only_actor;
   ClutterActor *actor;
diff --git a/src/tests/clutter/conform/grab.c b/src/tests/clutter/conform/grab.c
index c62eea6fb16..ef958b99f69 100644
--- a/src/tests/clutter/conform/grab.c
+++ b/src/tests/clutter/conform/grab.c
@@ -628,6 +628,7 @@ grab_input_only (void)
   grab = clutter_stage_grab_input_only (CLUTTER_STAGE (data.stage),
                                         handle_input_only_event,
                                         data.events, NULL);
+  clutter_grab_activate (grab);
   event_log_compare ((EventLog *) &grab1_log, data.events);
 
   clutter_virtual_input_device_notify_button (pointer,
diff --git a/src/wayland/meta-wayland-input.c b/src/wayland/meta-wayland-input.c
index 346dfe3485e..6e12e963e22 100644
--- a/src/wayland/meta-wayland-input.c
+++ b/src/wayland/meta-wayland-input.c
@@ -303,6 +303,8 @@ meta_wayland_input_attach_event_handler (MetaWaylandInput                *input,
                                                    grab_handle_event,
                                                    input,
                                                    NULL);
+      clutter_grab_activate (input->grab);
+
       g_signal_connect_swapped (input->grab, "notify::revoked",
                                 G_CALLBACK (on_grab_revocation_change),
                                 input);
-- 
GitLab


From 7e0e42801697c38f10350f3890ec0a84b6a82556 Mon Sep 17 00:00:00 2001
From: Carlos Garnacho <carlosg@gnome.org>
Date: Mon, 17 Jun 2024 16:15:07 +0200
Subject: [PATCH 2/2] clutter: Specify that input-only grabs are started
 inactive in API

Add the _inactive suffix, so that the state of these objects is clear.

(cherry-picked from commit 01444e803f7f8f158c65b10b57a195737ecd26a6)

Part-of: <https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/3874>
---
 clutter/clutter/clutter-stage-private.h | 8 ++++----
 clutter/clutter/clutter-stage.c         | 8 ++++----
 src/tests/clutter/conform/grab.c        | 6 +++---
 src/wayland/meta-wayland-input.c        | 8 ++++----
 4 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/clutter/clutter/clutter-stage-private.h b/clutter/clutter/clutter-stage-private.h
index 6ff67f5de79..0701079737c 100644
--- a/clutter/clutter/clutter-stage-private.h
+++ b/clutter/clutter/clutter-stage-private.h
@@ -136,10 +136,10 @@ void clutter_stage_add_to_redraw_clip (ClutterStage       *self,
                                        ClutterPaintVolume *clip);
 
 CLUTTER_EXPORT
-ClutterGrab * clutter_stage_grab_input_only (ClutterStage        *self,
-                                             ClutterEventHandler  handler,
-                                             gpointer             user_data,
-                                             GDestroyNotify       user_data_destroy);
+ClutterGrab * clutter_stage_grab_input_only_inactive (ClutterStage        *self,
+                                                      ClutterEventHandler  handler,
+                                                      gpointer             user_data,
+                                                      GDestroyNotify       user_data_destroy);
 
 void clutter_stage_invalidate_devices (ClutterStage *stage);
 
diff --git a/clutter/clutter/clutter-stage.c b/clutter/clutter/clutter-stage.c
index 294574865b4..d5a5952601c 100644
--- a/clutter/clutter/clutter-stage.c
+++ b/clutter/clutter/clutter-stage.c
@@ -3931,10 +3931,10 @@ clutter_stage_grab_inactive (ClutterStage *stage,
 }
 
 ClutterGrab *
-clutter_stage_grab_input_only (ClutterStage         *stage,
-                               ClutterEventHandler   handler,
-                               gpointer              user_data,
-                               GDestroyNotify        user_data_destroy)
+clutter_stage_grab_input_only_inactive (ClutterStage         *stage,
+                                        ClutterEventHandler   handler,
+                                        gpointer              user_data,
+                                        GDestroyNotify        user_data_destroy)
 {
   ClutterInputOnlyActor *input_only_actor;
   ClutterActor *actor;
diff --git a/src/tests/clutter/conform/grab.c b/src/tests/clutter/conform/grab.c
index ef958b99f69..26125a2e1b1 100644
--- a/src/tests/clutter/conform/grab.c
+++ b/src/tests/clutter/conform/grab.c
@@ -625,9 +625,9 @@ grab_input_only (void)
 
   test_data_init (&data);
 
-  grab = clutter_stage_grab_input_only (CLUTTER_STAGE (data.stage),
-                                        handle_input_only_event,
-                                        data.events, NULL);
+  grab = clutter_stage_grab_input_only_inactive (CLUTTER_STAGE (data.stage),
+                                                 handle_input_only_event,
+                                                 data.events, NULL);
   clutter_grab_activate (grab);
   event_log_compare ((EventLog *) &grab1_log, data.events);
 
diff --git a/src/wayland/meta-wayland-input.c b/src/wayland/meta-wayland-input.c
index 6e12e963e22..b1c91f25db1 100644
--- a/src/wayland/meta-wayland-input.c
+++ b/src/wayland/meta-wayland-input.c
@@ -299,10 +299,10 @@ meta_wayland_input_attach_event_handler (MetaWaylandInput                *input,
       MetaBackend *backend = meta_context_get_backend (context);
       ClutterStage *stage = CLUTTER_STAGE (meta_backend_get_stage (backend));
 
-      input->grab = clutter_stage_grab_input_only (stage,
-                                                   grab_handle_event,
-                                                   input,
-                                                   NULL);
+      input->grab = clutter_stage_grab_input_only_inactive (stage,
+                                                            grab_handle_event,
+                                                            input,
+                                                            NULL);
       clutter_grab_activate (input->grab);
 
       g_signal_connect_swapped (input->grab, "notify::revoked",
-- 
GitLab

