From a0ff39936a824f0677ce1dc075c77f0097edfae5 Mon Sep 17 00:00:00 2001
From: Andrew Chadwick <a.t.chadwick@gmail.com>
Date: Sat, 2 Apr 2016 19:11:25 +0100
Subject: [PATCH 1/1] filename_to_unicode: tolerate typelib variations
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes an exception when g_filename_to_utf8() has a more sensible
wrapping than our old expectation â˜º

Addresses mypaint/mypaint#634.

Also remove pointless import from doctest.
---
 lib/glib.py | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/lib/glib.py b/lib/glib.py
index 3bc5989..ca4f34b 100644
--- a/lib/glib.py
+++ b/lib/glib.py
@@ -36,7 +36,6 @@ def filename_to_unicode(opsysstring):
     :returns: the converted filename
     :rtype: unicode
 
-    >>> from gi.repository import GLib
     >>> filename_to_unicode('/ascii/only/path')
     u'/ascii/only/path'
     >>> filename_to_unicode(None) is None
@@ -55,7 +54,12 @@ def filename_to_unicode(opsysstring):
     # Other systems are dependent in opaque ways on the environment.
     if not isinstance(opsysstring, str):
         raise TypeError("Argument must be bytes")
-    ustring = GLib.filename_to_utf8(opsysstring, -1, 0, 0)
+    # This function's annotation seems to vary quite a bit.
+    # See https://github.com/mypaint/mypaint/issues/634
+    try:
+        ustring, _, _ = GLib.filename_to_utf8(opsysstring, -1)
+    except TypeError:
+        ustring = GLib.filename_to_utf8(opsysstring, -1, 0, 0)
     if ustring is None:
         raise UnicodeDecodeError(
             "GLib failed to convert %r to a UTF-8 string. "
-- 
2.10.1

